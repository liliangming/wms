<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.xhs.dao.stock.XhsProductStockDao">
	
	<!-- 查询数据
	<select id="findList" resultType="XhsProductStock">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
	<select id="queryXhsProductStock" resultType="com.jeesite.modules.xhs.entity.stock.XhsProductStockBO">
	    select t1.id as id, 
               t1.product_id as productId, 
               t2.product_code as productCode, 
               t2.product_name as productName, 
               ifnull(sum(t1.quantity),0) as quantity
        from xhs_stock_info t1
        left join xhs_product_info t2
        on t1.product_id = t2.id
        where t1.`status` = 0
          and t2.`status` = 0
        <if test="productId != null">
          and t1.product_id = #{productId}
        </if>
        <if test="warehouseCode != null">
          and t1.warehouse_code = #{warehouseCode}
        </if>
        group by t1.id, t1.product_id, t2.product_code, t2.product_name
        order by t2.product_code desc
	</select>
	
	<insert id="addXhsProductStock" parameterType="com.jeesite.modules.xhs.entity.stock.XhsProductStock">
	    insert into xhs_stock_info(id,
	                               product_id,
	                               warehouse_code,
	                               quantity,
	                               status,
	                               create_by,
	                               create_date,
	                               update_by,
	                               update_date
	                              ) 
	                        values(#{id},
	                               #{product.id},
	                               #{warehouse.treeCode},
	                               #{quantity},
	                               0,
	                               #{createBy},
	                               CURRENT_TIMESTAMP(),
	                               #{updateBy},
	                               CURRENT_TIMESTAMP()
	                              )
	    on duplicate key update quantity = quantity + ifnull(quantity,0),
	                            update_by = #{updateBy},
	                            update_date = CURRENT_TIMESTAMP()
	</insert>
	
</mapper>